{
  "title": "Tus.io",
  "name": "tus-io",
  "version": "0.0.1",
  "scripts": {
    "build:community": "_scripts/build-community.sh",
    "build:protocol": "_scripts/build-protocol.sh",
    "build:site": "cross-env JEKYLL_ENV={JEKYLL_ENV:-development} bundle exec jekyll build --incremental",
    "build:site:full": "cross-env JEKYLL_ENV={JEKYLL_ENV:-development} bundle exec jekyll build",
    "build": "npm-run-all build:community build:protocol build:site:full",
    "deploy": "cross-env JEKYLL_ENV=production npm run build && _scripts/deploy.sh",
    "download:logos": "cross-env DEBUG=*:* IMAGES_CFG=_data/logos.yml IMAGES_DIR=assets/img/logos coffee ./_scripts/download-external-images.coffee",
    "download:press": "cross-env DEBUG=*:* IMAGES_CFG=_data/press.yml IMAGES_DIR=assets/img/press coffee ./_scripts/download-external-images.coffee",
    "install": "_scripts/post-install.sh",
    "optimize:logos": "cross-env IMAGES_CFG=_data/logos.yml IMAGES_DIR=assets/img/logos _scripts/images-optimize.sh",
    "optimize:press": "cross-env IMAGES_CFG=_data/press.yml IMAGES_DIR=assets/img/press _scripts/images-optimize.sh",
    "pull": "git pull",
    "serve": "browser-sync start --server _site --files _site --reload-delay 400",
    "start": "npm-run-all pull install build --parallel watch serve",
    "start:quick": "npm-run-all build:site --parallel watch serve",
    "watch": "nodemon --verbose --watch ./ --ignore _site/ --ignore vendor/ --ext html,json,md,js,css,png,jpg --exec 'npm run build:site'"
  },
  "dependencies": {
    "fakefile": "0.0.8",
    "nodemon": "1.9.2"
  },
  "devDependencies": {
    "browser-sync": "2.13.0",
    "cross-env": "2.0.0",
    "depurar": "0.2.2",
    "download": "5.0.2",
    "glob": "7.0.5",
    "js-yaml": "3.6.1",
    "nodemon": "1.9.2",
    "npm-run-all": "2.3.0",
    "on-the-githubs": "2.3.2",
    "postcss-reporter": "1.4.1",
    "postcss": "5.1.0",
    "stylelint": "7.0.3",
    "tus-js-client": "1.1.4"
  }
}
